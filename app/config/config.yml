imports:
    - { resource: parameters.ini }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    charset:         UTF-8
    router:          { resource: "%kernel.root_dir%/config/routing.yml" }
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    session:
        default_locale: %locale%
        auto_start:     true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        pagerfanta_opts:
            previous_message: '&laquo;'
            next_message:     '&raquo;'
            dots_message:     '...'

    
# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    # java: /usr/bin/java
    filters:
        cssrewrite: ~
        # closure:
        #     jar: %kernel.root_dir%/java/compiler.jar
        # yui_css:
        #     jar: %kernel.root_dir%/java/yuicompressor-2.4.2.jar
   
# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%

jms_security_extra:
    secure_controllers:  true
    secure_all_services: false

jms_serializer:
    handlers:
        object_based: false
        datetime:
            format: "d.m.Y" 

sensio_framework_extra:
    router:  { annotations: true }
    request: { converters: true }
    view:    { annotations: true }
    cache:   { annotations: true }

doctrine_mongodb:
    connections:
        default:
            server: mongodb://127.0.0.1:27017
            options:
                connect: true
    default_database: crosswords_%kernel.environment%
    document_managers:
        default:
            mappings:
                AnyxCrosswordBundle: ~
                AnyxPageBundle: ~
                FOSUserBundle: ~
                AnyxSocialUserBundle: 
                  prefix: Anyx\SocialUserBundle\Model
                  
    auto_generate_hydrator_classes: false

fos_user:
    db_driver: mongodb
    service:
        user_manager: anyx_social_user.user.manager
    firewall_name: main
    user_class: Anyx\CrosswordBundle\Document\User
    profile:
      form:
        type: anyx_user_profile
        handler: anyx_user.form.handler.registration
    
foq_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        website:
            client: default
            settings:
                index:
                  analysis:
                    analyzer: 
                      ru_snowball:
                        type : snowball
#                        tokenizer: standart
                        language: Russian
                        filter: [standart, lowercase, ru_snowball_filter]
                    filter:
                      ru_snowball_filter:
                        type: snowball
                        language: Russian
            types:
                crossword:
                  mappings:
                    title: {boost: 5, analyzer: ru_snowball}
                    description: {boost: 4, analyzer: ru_snowball}
                    countSolving: {boost: 3}
                  persistence:
                      driver: mongodb
                      model: Anyx\CrosswordBundle\Document\Crossword
                      provider: 
                      listener:
                      finder:
sonata_cache:
    caches:
        mongo:
            database:   cache
            collection: cache
            servers:
                - {host: 127.0.0.1, port: 27017, user: username, password: pASS'}
                - {host: 127.0.0.2}

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text: 
        sonata.block.service.action:
        sonata.block.service.rss:

sonata_admin:
    title:      Sonata Project
    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig
    dashboard:
        blocks:
            # display a dashboard block
            #- { position: left, type: sonata.admin.block.admin_list }
        groups:
            sonata_page:
                label: Pages
                items: 
                  - sonata.admin.page
                
sonata_doctrine_mongo_db_admin: ~

anyx_social_user:
  fos_user:
    db_driver: mongodb
  accounts:
    map:
      facebook: 
        accountId: id
        userName: name
      twitter:
        accountId: id
        userName: name
      vkontakte:
        accountId: response.0.uid
        userName: response.0.first_name
        
anyx_social:
  services:
    facebook:
      client_id:         114949468588006
      secret:            15266750e6ae656f3fab05a807c405f5
      scope:             email,user_about_me
    twitter:
      client_id:         7EpGiK7VCRTnLzEoELme2w
      secret:            rM3NuRHI2v8I9AKKOgIZnMTxwsYck4VyhmlLe7ip8
      scope:             email,user_about_me
    vkontakte:
      client_id:         2399701
      secret:            jpIAY6YiK2JnIxIbSbTH
      scope:             notify,offline
      user_fields:            uid, first_name, last_name, nickname, screen_name, sex, bdate (birthdate), city, country, timezone, photo, photo_medium, photo_big, has_mobile, rate, contacts, education, online, counters
      
#aliases
services:
    anyx.dm: "@doctrine.odm.mongodb.document_manager"

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags: [{ name: 'twig.extension' }]
    twig.extension.debug:
        class: Twig_Extensions_Extension_Debug
        tags: [{ name: 'twig.extension' }]
        
    user.listener:
      class: Anyx\CrosswordBundle\Listener\UserListener
      tags:
        - { name: kernel.event_listener, event: users.merge, method: onMergeUsers}
    solution.listener:
      class: Anyx\CrosswordBundle\Listener\SolutionListener
      tags:
        - { name: doctrine.odm.mongodb.default_event_listener, event: postPersist, method: postPersist}
        